
#		**********************************************************************************************************
#		Chapter 21. Toolset Guide
#		**********************************************************************************************************

title21 = 第二十一章. 工具指南
p21-1 = 可以通过一系列Eclipse插件、命令行工具和Ant任务来进行与Hibernate关联的转换。
p21-2 = 除了Ant任务外，当前的Hibernate Tools也包含了Eclipse IDE的插件，用于与现存数据库的逆向工程：
li21-1-1 = <code>Mapping Editor</code>: Hibernate XML映射文件的编辑器，支持自动完成和语法高亮。它也支持对类名和属性/字段名的语义自动完成，比通常的XML编辑器方便得多。
li21-1-2 = <code>Console</code>: console是Eclipse的一个新视图。除了你的console配置的树状概览，你还可以看到持久类以及它们之间关系的交互视图。console允许你执行数据库的HQL，并直接在eclipse中查看结果。
li21-1-3 = <code>Development Wizards</code>: Hibernate Eclipse工具还提供了一些想到。你可以通过想到快速生成配置文件（<code>cfg.xml</code>）你甚至还可以同现存的数据库schema中反向工程出POJO源代码与Hibernate 映射文件。反向工程支持可定制的模版。
p21-3 = 要得到更多信息，请查阅 Hibernate Tools 包及其文档。
p21-4 = 然而，Hibernate主包还附带了一个集合工具：<code>SchemaExport aka hbm2ddl</code>。它甚至可以在Hibernate内部使用。

#		**********************************************************************************************************
#		21.1. Automatic schema generation
#		**********************************************************************************************************

title21-1 = 21.1. 自动模式生成
p21-1-1 = 可以从你的映射文件使用一个Hibernate工具生成DDL。生成的schema包含有对实体和集合类表的完整性引用约束（主键和外键）。涉及到的标示符生成器所需的表和sequence也会同时生成。
p21-1-2 =当使用这个工具时，你必须使用<code>hibernate.dialect</code>指定一个SQL方言，因为DDL与供应商高度相关。
p21-1-3 = 首先，要定制你的映射文件，来改善生成的schema。

#		**********************************************************************************************************
#		21.1.1. Customizing the schema
#		**********************************************************************************************************

title21-1-1 = 21.1.1. 自定义模式
p21-1-1-1 = 很多Hibernate映射元素定义了可选的length、precision 或者 scale属性。你可以通过这个属性设置字段的长度、精度、小数点位数。
p21-1-1-2 = 一些标签也支持使用<code>not-null</code>属性生成一个有非空约束的数据列，使用<code>unique</code>属性生成有唯一约束的数据列。
p21-1-1-3 = <code>unique-key</code>属性可以对成组的列指定一个唯一键约束。这个属性覆写了所有唯一键约束的名称。
p21-1-1-4 = <code>index</code>属性会用一个或多个字段生成一个index，它指出了这个index的名称。如果多个字段对应的index名字相同，就会生成包含这些字段的index。
p21-1-1-5 = <code>foreign-key</code>属性可以用来覆盖任何生成的外键约束的名字。
p21-1-1-6 = 许多映射元素也支持<code>&lt;column&gt;</code>子元素。这在定义跨越多字段的类型时特别有用：
p21-1-1-7 = <code>default</code>允许给列指定默认值。在保存被映射的类的新实例之前，你应该将同样的值赋于对应的属性。
p21-1-1-8 = <code>sql-type</code>属性允许用户覆盖默认的Hibernate类型到SQL数据类型的映射。
p21-1-1-9 = <code>check</code>属性允许你指定一个约束检查。
p21-1-1-10 = 下面这张表总结了可选属性。
p21-1-1-11 = <strong>表 21.1. 总结</strong>
th21-1-1-1-1 = 属性
th21-1-1-1-2 = 值
th21-1-1-1-3 = 解析
td21-1-1-1-1 = length
td21-1-1-1-2 = 数字
td21-1-1-1-3 = 字段长度
td21-1-1-1-4 = precision
td21-1-1-1-5 = 数字
td21-1-1-1-6 = 精度
td21-1-1-1-7 = scale
td21-1-1-1-8 = 数字
td21-1-1-1-9 = 小数点位数
td21-1-1-1-10 = not-null
td21-1-1-1-11 = true|false
td21-1-1-1-12 = 指定列是否为非空
td21-1-1-1-13 = unique
td21-1-1-1-14= true|false
td21-1-1-1-15 = 指定列是否有唯一性约束
td21-1-1-1-16 = index
td21-1-1-1-17 = index_name
td21-1-1-1-18 = 指明一个（多个）列的索引名称
td21-1-1-1-19 = unique-key
td21-1-1-1-20 = unique_key_name
td21-1-1-1-21 = 指明多字段唯一约束的名称
td21-1-1-1-22 = foreign-key
td21-1-1-1-23 = foreign_key_name
td21-1-1-1-24 = 指明一个关联生成的外键名称，注意，<code>inverse="true"</code>在输出Schema时会被忽略。
td21-1-1-1-25 = sql-type
td21-1-1-1-26 = SQL column type
td21-1-1-1-27 = 覆盖默认的字段类型(只能用于 <code>&lt;column&gt;</code>属性）
td21-1-1-1-28 = default
td21-1-1-1-29 = SQL expression
td21-1-1-1-30 = 为列指定默认值specify a default value for the column
td21-1-1-1-31 = check
td21-1-1-1-32 = SQL expression
td21-1-1-1-33 = 对字段或表加入SQL约束检查
p21-1-1-12 = <code>&lt;comment&gt;</code>元素可以让你在生成的schema中加入注释。
p21-1-1-13 = 结果是在生成的DDL中包含<code>comment on table</code>或者<code>comment on column</code>语句(假若支持的话)。

#		**********************************************************************************************************
#		21.1.2. Running the tool
#		**********************************************************************************************************

title21-1-2 = 21.1.2. 运行该工具
p21-1-2-1 = <code>SchemaExport</code>工具把DDL脚本写到标准输出，同时/或者执行DDL语句。
p21-1-2-2 = 下面这张表显示了<code>SchemaExport</code>命令行选项
p21-1-2-3 = <code>java -cp hibernate_classpaths org.hibernate.tool.hbm2ddl.SchemaExport options mapping_files</code>
p21-1-2-4 = <strong>表 21.2. SchemaExport命令行选项</strong>
th21-1-2-2-1 = 选项
th21-1-2-2-2 = 描述
td21-1-2-2-1 = --quiet
td21-1-2-2-2 = 不要把脚本输出到stdout
td21-1-2-2-3 = --drop
td21-1-2-2-4 = 值进行drop table步骤
td21-1-2-2-5 = --create
td21-1-2-2-6 = 值创建表
td21-1-2-2-7 = --text
td21-1-2-2-8 = 不导出到数据库
td21-1-2-2-9 = --output=my_schema.ddl
td21-1-2-2-10 = 将ddl脚本输出到一个文件中
td21-1-2-2-11 = --naming=eg.MyNamingStrategy
td21-1-2-2-12 = 选择一个明明策略
td21-1-2-2-13 = --config=hibernate.cfg.xml
td21-1-2-2-14 = 从XML文件中读取Hibernate配置
td21-1-2-2-15 = --properties=hibernate.properties
td21-1-2-2-16 = 从文件中读取数据库属性
td21-1-2-2-17 = --format
td21-1-2-2-18 = 把脚本中的SQL语句对齐和美化
td21-1-2-2-19 = --delimiter=;
td21-1-2-2-20 = 为脚本设置结束符
p21-1-2-5 = 你甚至可以在你的应用程序中嵌入<code>SchemaExport</code> 

#		**********************************************************************************************************
#		21.1.3. Properties
#		**********************************************************************************************************

title21-1-3 = 21.1.3. 属性
p21-1-3-1 = 可以通过如下方式指定数据库属性：
li21-1-3-1-1 = 通过<code>-D&lt;property&gt;</code>系统参数
li21-1-3-1-2 = 在<code>hibernate.properties</code>文件中
li21-1-3-1-3 = 位于一个其它名字的properties文件中,然后用<code>--properties</code>参数指定
p21-1-3-2 = 所需的参数有：
p21-1-3-3 = <strong>表 21.3. SchemaExport连接属性</strong>
th21-1-3-1-1 = 属性名称
th21-1-3-1-2 = 描述
td21-1-3-1-1 = hibernate.connection.driver_class
td21-1-3-1-2 = jdbc driver class
td21-1-3-1-3 = hibernate.connection.url
td21-1-3-1-4 = jdbc url
td21-1-3-1-5 = hibernate.connection.username
td21-1-3-1-6 = 用户名
td21-1-3-1-7 = hibernate.connection.password
td21-1-3-1-8 = 密码
td21-1-3-1-9 = hibernate.dialect
td21-1-3-1-10 = 方言

#		**********************************************************************************************************
#		21.1.4. Using Ant
#		**********************************************************************************************************

title21-1-4 = 21.1.4. 使用Ant
p21-1-4-1 = 你可以在你的Ant脚本中使用<code>SchemaExport</code>:

#		**********************************************************************************************************
#		21.1.5. Incremental schema updates
#		**********************************************************************************************************

title21-1-5 = 21.1.5. 模式的增量更新
p21-1-5-1 = <code>SchemaUpdate</code>工具对已经存在的schema采用"增量"的方式进行更新。注意<code>SchemaUpdate</code>严重依赖于JDBC metadata API,所以它并非对所有JDBC驱动都有效。
p21-1-5-2 = <code>java -cp hibernate_classpaths org.hibernate.tool.hbm2ddl.SchemaUpdate options mapping_files</code>
p21-1-5-3 = <strong>表 21.4. SchemaUpdate命令行选项</strong>
th21-1-5-1-1 = 选项
th21-1-5-1-2 = 描述
td21-1-5-1-1 = --quiet
td21-1-5-1-2 = 不要把脚本输出到stdout
td21-1-5-1-3 = --text
td21-1-5-1-4 = 不要把脚本导出到数据库
td21-1-5-1-5 = --naming=eg.MyNamingStrategy
td21-1-5-1-6 = 选择一个明明策略
td21-1-5-1-7 = --properties=hibernate.properties
td21-1-5-1-8 = 从文件中读取数据库属性
td21-1-5-1-9 = --config=hibernate.cfg.xml
td21-1-5-1-10 = 制定一个<code>.cfg.xml</code>文件
p21-1-5-4 = 你可以在你的应用程序中嵌套使用<code>SchemaUpdate</code>：

#		**********************************************************************************************************
#		21.1.6. Using Ant for incremental schema updates
#		**********************************************************************************************************

title21-1-6 = 21.1.6. 使用Ant进行增量模式更新
p21-1-6-1 = 你可以在Ant脚本中调用<code>SchemaUpdate</code>：

#		**********************************************************************************************************
#		21.1.7. Schema validation
#		**********************************************************************************************************

title21-1-7 = 21.1.7. 模式验证
p21-1-7-1 = <code>SchemaValidator</code>工具会比较数据库现状是否与映射文档“匹配”。注意，SchemaValidator 严重依赖于JDBC的metadata API，因此不是对所有的JDBC驱动都适用。这一工具在测试的时候特别有用。
p21-1-7-2 = <code>java -cp hibernate_classpaths org.hibernate.tool.hbm2ddl.SchemaValidator options mapping_files</code>
p21-1-7-3 = 下面这张表展示了<code>SchemaValidator</code>的命令行选项：
p21-1-7-4 = <strong>表 21.5. SchemaValidator命令行选项</strong>
th21-1-7-1-1 = 选项
th21-1-7-1-2 = 描述
td21-1-7-1-1 = --naming=eg.MyNamingStrategy
td21-1-7-1-2 = 选择一个明明策略
td21-1-7-1-3 = --properties=hibernate.properties
td21-1-7-1-4 = 从文件中读取数据库属性
td21-1-7-1-5 = --config=hibernate.cfg.xml
td21-1-7-1-6 = 指定一个<code>.cfg.xml</code>文件
p21-1-7-5 = 你可以在应用程序中嵌套使用<code>SchemaValidator</code>：

#		**********************************************************************************************************
#		21.1.8. Using Ant for schema validation
#		**********************************************************************************************************

title21-1-8 = 21.1.8. 使用Ant进行模式验证
p21-1-8-1 = 你可以在Ant脚本中调用<code>SchemaValidator</code>:












