
#		**********************************************************************************************************
#		Chapter 22. Additional modules
#		**********************************************************************************************************

title22 = 第二十二章. 附加模块

#		**********************************************************************************************************
#		22.1. Bean Validation
#		**********************************************************************************************************

title22-1 = 22.1. Bean 验证
p22-1-1 = Bean 验证定义了如何定义和声明模型级别的约束。例如，你可以让一个属性不能为空，账户余额应该是严格的正数。这些约束通过属性上的注解直接定义在域模型上。Bean 验证可以读取并且检查约束验证。验证机制可以在应用层次的不同层级执行，所以没有必要多次定义这些规则 (表示层, 数据访问层)。遵循DRY原则，出于这个目的，设计了Bean验证和它的实现Hibernate验证。
p22-1-2 = Hibernate和Bean验证的继承工作在两个层面。首先，他可以对内存中的实例进行约束验证。第二，它可以在Hibernate元模型上使用约束，并且将其纳入生成的数据库模式。
p22-1-3 = 每一个约束注解都关联到一个验证实现，他们负责检查实体上的约束。验证器也可以（可选则的）用用在Hibernate元模型，允许Hibernate生曾表示约束的DDL表达式。有了适当的事件监听器，在Hibernate进行插入，修改和删除的时候你可以执行检查操作。
p22-1-4 = 当在运行时检查实例时，Hibernate 验证返回一组关于约束验证的<code>ConstraintViolations</code>信息。对于其他信息，<code>ConstraintViolation</code> 包含了一个错误描述信息，它可以嵌入和注解绑定的参数值（例如，大小限制），和一个可以写入到<code>ResourceBundle</code>的消息字符串。

#		**********************************************************************************************************
#		22.1.1. Adding Bean Validation
#		**********************************************************************************************************

title22-1-1 = 22.1.1. 添加Bean验证
p22-1-1-1 =为了集成Hibernate的 Bean 验证，只需要简单的在classpath上添加一个Bean验证提供者(优选Hibernate Validation 4)。

#		**********************************************************************************************************
#		22.1.2. Configuration
#		**********************************************************************************************************

title22-1-2 = 22.1.2. 配置
p22-1-2-1 = 默认情况下，是不需要配置的。
p22-1-2-2 = 默认组在实体插入和更新的时候进行了验证，并且数据模型会根据默认组进行更新。
p22-1-2-3 = 你可以通过设置验证模式来自定义Bean验证的集成。使用 <code>javax.persistence.validation.mode</code> 属性并且按照示例配置你的persistence.xml 文件或者<code>hibernate.cfg.xml</code> 文件。有以下可能的操作：
li22-1-2-1-1 = <code>auto</code> (默认): 只有在Bean验证在classpath中存在时才使Bean验证和Hibernate（回调和DDL生成）集成可用。
li22-1-2-1-2 = <code>none</code>: 禁用所有的Bean验证和Hibernate的集成。
li22-1-2-1-3 = <code>callback</code>: 只有在实体插入，修改，或者删除的时候才进行验证。如果classpath中不存在Bean验证提供者，则会抛出一个异常。
li22-1-2-1-4 = <code>ddl</code>: 只有在由Hibernate生成时时才在数据库模式上使用约束。如果在classpath上没有Bean验证提供者时，则会抛出一个异常。这个值不是由Java持久化规范中定义，并且是特定于Hibernate的。
nc22-1-2-1 = 你可以一起使用 <code>callback</code> 和 <code>ddl</code> 通过把属性设置为callback, dll
nc22-1-2-2 = 它相当于 <code>auto</code>，不同之处在于如果没有Bean验证提供者，则会抛出异常。
p22-1-2-4 = 如果你想在插入，修改，删除的过程中验证不同的组，则使用：
li22-1-2-2-1 = <code>javax.persistence.validation.group.pre-persist</code>: 组验证，当一个实体将要被持久化时。(默认<code>Default</code>)
li22-1-2-2-2 = <code>javax.persistence.validation.group.pre-update</code>: 组验证，当一个实体将要被修改时(默认是<code>Default</code>)
li22-1-2-2-3 = <code>javax.persistence.validation.group.pre-remove</code>: 组验证，当一个实体将要被删除时(默认 no group)
li22-1-2-2-4 = <code>org.hibernate.validator.group.ddl</code>: 和组有关的，当在数据库模式上使用约束时(默认 Default)
p22-1-2-5 = 每个属性接受组的全限定类名，这些组是通过沿验证的，并且使用“，”分隔。
nc22-1-2-3 = 你可以在<code>hibernate.cfg.xml</code>, <code>hibernate.properties</code> 上设置属性或者通过编码的方式实现。

#		**********************************************************************************************************
#		22.1.3. Catching violations
#		**********************************************************************************************************

title22-1-3 = 22.1.3. 捕获违法行为
p22-1-3-1 = 如果一个实体是违反验证的，违反约束的列表通过<code>ConstraintViolationException</code>传递，它包含了一组 <code>ConstraintViolations</code>。
p22-1-3-2 = 当在提交时，违反了约束，异常被包装在 <code>RollbackException</code>实例里面。否则返回<code>ConstraintViolationException</code> 异常(例如在调用flush()时。注意，一般情况下，可捕获的违法行为在更高的层级验证(例如在Seam / JSF 2 使用 JSF - Bean 验证集成或者在你的业务层显示的调用Bean验证)。
p22-1-3-3 = 一个应用程序通常很少会有由Hibernate抛出的<code>ConstraintViolationException</code>异常，这个异常是致命的并且应该丢弃持久化上下文(<code>EntityManager</code> 或者 <code>Session</code>)。

#		**********************************************************************************************************
#		22.1.4. Database schema
#		**********************************************************************************************************

title22-1-4 = 22.1.4. 数据库模式
p22-1-4-1 = Hibernate使用实体验证约束来精确的创建数据库schema：
li22-1-4-1-1 = <code>@NotNull</code> 指明此列非空（除非它与组件或者表继承存在冲突）
li22-1-4-1-2 = <code>@Size.max</code> 为字符串指明<code>varchar(max)</code>
li22-1-4-1-3 = <code>@Min</code>, <code>@Max</code> 指明列检查（比如 value <= max）
li22-1-4-1-4 = <code>@Digits</code> 指明精度 (以前想知道哪个是哪个？现在使用<code>@Digits</code>可以轻松办到:) )
p22-1-4-2 = 这些约束可以在实体属性中直接定义，也可以使用约束组件间接定义。
p22-1-4-3 = 查看Hiberante文档获取更多信 <a href="http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html/">http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html/</a>

#		**********************************************************************************************************
#		22.2. Hibernate Search
#		**********************************************************************************************************

title22-2 = 22.2. Hibernate查询

#		**********************************************************************************************************
#		22.2.1. Description
#		**********************************************************************************************************

title22-2-1 = 22.2.1. 描述
p22-2-1-1 = 像Apache Lucene这样的全文本搜索引擎很好的将自由文本搜索带入到应用程序中来。当在处理一个对象域模型时如果遇到一些错误的配置(保持索引是最新的, 索引结构和域模型不匹配，查询不匹配等...), 归功与几个注解，Hibernate Search 可以给你的与模型指定索引，负责保持数据库/索引同步并且把你从简单的自由的文本查询带回到常规的对象管理上。Hibernate查询的底层使用的是<a href="http://lucene.apache.org/">Apache Lucene</a>。

#		**********************************************************************************************************
#		22.2.2. Integration with Hibernate Annotations
#		**********************************************************************************************************

title22-2-2 = 22.2.2. 集成Hibernate 注解
p22-2-2-1 = Hibernate查询的架包出现在类路径中，Hibernate查询功能就被整合到Hiebrate主功能中了。如果你不希望自动注册Hibernate搜索事件，你可以设置<code>hibernate.search.autoregister_listeners</code>为false。这种需求是十分特殊的，不推荐使用。
p22-2-2-2 = 查看Hibernate查询文档获取更多内容。( <a href="http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html/">http://docs.jboss.org/hibernate/stable/validator/reference/en-US/html/</a> )。



