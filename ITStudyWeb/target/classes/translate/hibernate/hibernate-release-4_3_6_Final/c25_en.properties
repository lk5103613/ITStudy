
#		**********************************************************************************************************
#		Chapter 25. Example: Various Mappings
#		**********************************************************************************************************

title25 = Chapter 25. Example: Various Mappings
p25-1 = This chapters explores some more complex association mappings.

#		**********************************************************************************************************
#		25.1. Employer/Employee
#		**********************************************************************************************************

title25-1 = 25.1. Employer/Employee
p25-1-1 = The following model of the relationship between <code>Employer</code> and <code>Employee</code> uses an entity class (Employment) to represent the association. You can do this when there might be more than one period of employment for the same two parties. Components are used to model monetary values and employee names.
p25-1-2 = Here is a possible mapping document:
p25-1-3 = Here is the table schema generated by <code>SchemaExport</code>.

#		**********************************************************************************************************
#		25.2. Author/Work
#		**********************************************************************************************************

title25-2 = 25.2. Author/Work
p25-2-1 = Consider the following model of the relationships between <code>Work</code>, <code>Author</code> and <code>Person</code>. In the example, the relationship between <code>Work</code> and <code>Author</code> is represented as a many-to-many association and the relationship between <code>Author</code> and <code>Person</code> is represented as one-to-one association. Another possibility would be to have <code>Author</code> extend <code>Person</code>.
p25-2-2 = The following mapping document correctly represents these relationships:
p25-2-3 = There are four tables in this mapping: <code>works</code>, <code>authors</code> and <code>persons</code> hold work, author and person data respectively. <code>author_work</code> is an association table linking authors to works. Here is the table schema, as generated by <code>SchemaExport</code>:

#		**********************************************************************************************************
#		25.3. Customer/Order/Product
#		**********************************************************************************************************

title25-3 = 25.3. Customer/Order/Product
p25-3-1 = In this section we consider a model of the relationships between <code>Customer</code>, <code>Order</code>, <code>Line Item</code> and <code>Product</code>. There is a one-to-many association between <code>Customer</code> and <code>Order</code>, but how can you represent <code>Order</code> / <code>LineItem</code> / <code>Product</code>? In the example, LineItem is mapped as an association class representing the many-to-many association between <code>Order</code> and <code>Product</code>. In Hibernate this is called a composite element.
p25-3-2 = The mapping document will look like this:
p25-3-3 = <code>customers</code>, <code>orders</code>, <code>line_items</code> and <code>products</code> hold customer, order, order line item and product data respectively. <code>line_items</code> also acts as an association table linking orders with products.

#		**********************************************************************************************************
#		25.4. Miscellaneous example mappings
#		**********************************************************************************************************

title25-4 = 25.4. Miscellaneous example mappings
p25-4-1 = These examples are available from the Hibernate test suite. You will find many other useful example mappings there by searching in the <code>test</code> folder of the Hibernate distribution.

#		**********************************************************************************************************
#		25.4.1. "Typed" one-to-one association
#		**********************************************************************************************************

title25-4-1 = 25.4.1. "Typed" one-to-one association

#		**********************************************************************************************************
#		25.4.2. Composite key example
#		**********************************************************************************************************

title25-4-2 = 25.4.2. Composite key example

#		**********************************************************************************************************
#		25.4.3. Many-to-many with shared composite key attribute
#		**********************************************************************************************************

title25-4-3 = 25.4.3. Many-to-many with shared composite key attribute

#		**********************************************************************************************************
#		25.4.4. Content based discrimination
#		**********************************************************************************************************

title25-4-4 = 25.4.4. Content based discrimination

#		**********************************************************************************************************
#		25.4.5. Associations on alternate keys
#		**********************************************************************************************************

title25-4-5 = 25.4.5. Associations on alternate keys
